@using GiftOfGivers.Client.Helpers
@using GiftOfGivers.Client.Services
@inject IToastService ToastService

<div class="@GetToastContainerClasses()">
    @foreach (var toast in ToastService.Toasts)
    {
        <div class="@GetToastClasses(toast)" @key="toast.Id">
            <div class="grid gap-1">
                @if (!string.IsNullOrEmpty(toast.Title))
                {
                    <div class="text-sm font-semibold">@toast.Title</div>
                }
                @if (!string.IsNullOrEmpty(toast.Description))
                {
                    <div class="text-sm opacity-90">@toast.Description</div>
                }
            </div>
            <button @onclick="() => ToastService.DismissToast(toast.Id)" 
                    class="absolute right-2 top-2 rounded-md p-1 text-foreground/50 opacity-0 transition-opacity hover:text-foreground focus:opacity-100 focus:outline-none focus:ring-2 group-hover:opacity-100">
                <svg class="h-4 w-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M6 18L18 6M6 6l12 12"></path>
                </svg>
            </button>
        </div>
    }
</div>

@code {
    protected override void OnInitialized()
    {
        ToastService.OnToastsUpdated += StateHasChanged;
    }

    public void Dispose()
    {
        ToastService.OnToastsUpdated -= StateHasChanged;
    }

    private string GetToastContainerClasses()
    {
        return "fixed top-0 z-[100] flex max-h-screen w-full flex-col-reverse p-4 sm:bottom-0 sm:right-0 sm:top-auto sm:flex-col md:max-w-[420px]";
    }

    private string GetToastClasses(ToastMessage toast)
    {
        var baseClasses = "group pointer-events-auto relative flex w-full items-center justify-between space-x-4 overflow-hidden rounded-md border p-6 pr-8 shadow-lg transition-all";
        
        var variantClasses = toast.Type switch
        {
            ToastType.Success => "border-green-200 bg-green-50 text-green-900 dark:border-green-800 dark:bg-green-900 dark:text-green-50",
            ToastType.Warning => "border-yellow-200 bg-yellow-50 text-yellow-900 dark:border-yellow-800 dark:bg-yellow-900 dark:text-yellow-50",
            ToastType.Destructive => "border-red-200 bg-red-50 text-red-900 dark:border-red-800 dark:bg-red-900 dark:text-red-50",
            _ => "bg-background text-foreground"
        };

        var animationClasses = "data-[state=open]:animate-in data-[state=closed]:animate-out data-[swipe=end]:animate-out data-[state=closed]:fade-out-80 data-[state=closed]:slide-out-to-right-full data-[state=open]:slide-in-from-top-full data-[state=open]:sm:slide-in-from-bottom-full";

        return Utils.Cn(baseClasses, variantClasses, animationClasses);
    }
}